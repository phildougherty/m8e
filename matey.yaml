version: "1"
registry:
    url: mcp.robotrad.io
proxy_auth:
    enabled: true
    api_key: myapikey
    oauth_fallback: true
oauth:
    enabled: true
    issuer: http://192.168.86.201:9876
    endpoints:
        authorization: /oauth/authorize
        token: /oauth/token
        userinfo: /oauth/userinfo
        revoke: /oauth/revoke
        discovery: /.well-known/oauth-authorization-server
    tokens:
        access_token_ttl: 1h
        refresh_token_ttl: 168h
        authorization_code_ttl: 10m
        algorithm: HS256
    security:
        require_pkce: true
    grant_types:
        - authorization_code
        - client_credentials
        - refresh_token
    response_types:
        - code
    scopes_supported:
        - mcp:*
        - mcp:tools
        - mcp:resources
        - mcp:prompts
audit:
    enabled: true
    log_level: info
    storage: memory
    retention:
        max_entries: 1000
        max_age: 7d
    events:
        - oauth.token.issued
        - oauth.token.revoked
        - oauth.user.login
        - server.access.granted
        - server.access.denied
rbac:
    enabled: true
    scopes:
        - name: mcp:*
          description: Full access to all MCP resources
        - name: mcp:tools
          description: Access to MCP tools
        - name: mcp:resources
          description: Access to MCP resources
        - name: mcp:prompts
          description: Access to MCP prompts
    roles:
        admin:
            name: admin
            description: Full administrative access
            scopes:
                - mcp:*
        readonly:
            name: readonly
            description: Read-only access
            scopes:
                - mcp:resources
        user:
            name: user
            description: Standard user access
            scopes:
                - mcp:tools
                - mcp:resources
oauth_clients:
    openwebui:
        client_id: openwebui-client
        client_secret: null
        name: OpenWebUI Integration
        description: OpenWebUI tools integration client
        redirect_uris:
            - http://192.168.86.201:3000/oauth/callback
            - http://localhost:3000/oauth/callback
        scopes:
            - mcp:tools
            - mcp:resources
        grant_types:
            - authorization_code
            - refresh_token
        public_client: true
        auto_approve: true
    testing_client:
        client_id: HFakeCpMUQnRX_m5HJKamRjU_vufUnNbG4xWpmUyvzo
        client_secret: ""
        name: Testing
        description: Test client for OAuth flows
        redirect_uris:
            - http://desk:3111/oauth/callback
        scopes:
            - mcp:tools
            - mcp:resources
            - mcp:*
        grant_types:
            - authorization_code
            - client_credentials
            - refresh_token
        public_client: false
        auto_approve: true
servers:
    dexcom:
        build:
            context: ./custom_mcp/dexcom
            dockerfile: Dockerfile
        env:
            DEXCOM_PASSWORD: Sharky123
            DEXCOM_REGION: us
            DEXCOM_USERNAME: "+17186149288"
            HTTP_PORT: "8007"
        ports:
            - 8007:8007
        http_port: 8007
        protocol: http
        capabilities:
            - tools
            - resources
        security:
            allow_privileged_ops: true
            trusted_image: true
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:tools
            allow_api_key: true
        user: root
        security_opt:
            - no-new-privileges:true
        deploy:
            resources:
                limits:
                    cpus: "1.0"
                    memory: 256m
                    pids: 100
    filesystem:
        command: node
        args:
            - /app/dist/index.js
            - --transport
            - http
            - --host
            - 0.0.0.0
            - --port
            - "3000"
            - /projects
        build:
            context: ./custom_mcp/filesystem
            dockerfile: Dockerfile
        env:
            NODE_ENV: production
        http_port: 3000
        protocol: http
        capabilities:
            - resources
            - tools
        volumes:
            - /home/phil:/projects:rw
            - /tmp:/tmp:rw
        security:
            allow_host_mounts:
                - /home/phil
                - /tmp
            trusted_image: true
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:resources
            allow_api_key: true
        user: 1000:1000
        cap_add:
            - CHOWN
            - DAC_OVERRIDE
            - SETGID
            - SETUID
        cap_drop:
            - ALL
        security_opt:
            - no-new-privileges:true
            - apparmor:unconfined
        deploy:
            resources:
                limits:
                    cpus: "1.0"
                    memory: 512m
                    pids: 100
    github:
        command: npx
        args:
            - -y
            - '@modelcontextprotocol/server-github'
        build:
            context: ./docker_utils/socat_stdio_hoster
            dockerfile: Dockerfile.base_socat_hoster
            args:
                BASE_IMAGE: node:22-slim
        env:
            GITHUB_TOKEN: ""
            MCP_SOCAT_INTERNAL_PORT: "12348"
        stdio_hoster_port: 12348
        capabilities:
            - tools
            - resources
        security:
            trusted_image: true
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:tools
            allow_api_key: true
        user: 1000:1000
        cap_add:
            - CHOWN
            - DAC_OVERRIDE
            - SETGID
            - SETUID
        cap_drop:
            - ALL
        security_opt:
            - no-new-privileges:true
            - apparmor:unconfined
        deploy:
            resources:
                limits:
                    cpus: "1.0"
                    memory: 512m
                    pids: 100
    hn-radio:
        command: node
        args:
            - server.js
        build:
            context: ./custom_mcp/hn_radio
            dockerfile: Dockerfile
        env:
            EPISODES_DIR: /projects/hn_radio_episodes
            HTTP_PORT: "8009"
            OLLAMA_HOST: 100.82.120.44
            OLLAMA_MODEL: qwen3:14b
            TTS_URL: http://100.82.120.44:8000/v1/audio/speech
            TTS_VOICE: af_bella
        http_port: 8009
        protocol: http
        capabilities:
            - tools
        volumes:
            - /home/phil:/projects:rw
            - /tmp:/tmp:rw
        security:
            allow_host_mounts:
                - /home/phil
                - /tmp
                - /var
            allow_privileged_ops: true
            trusted_image: true
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:tools
            allow_api_key: true
        user: root
        security_opt:
            - no-new-privileges:true
        deploy:
            resources:
                limits:
                    cpus: "2.0"
                    memory: 2g
                    pids: 200
    meal-log:
        command: /app/meal-log
        args:
            - --transport
            - http
            - --host
            - 0.0.0.0
            - --port
            - "8011"
            - --db-path
            - /data/meal-log.db
        build:
            context: ./custom_mcp/meal-log
            dockerfile: Dockerfile
        env:
            HTTP_PORT: "8011"
            MCP_PROXY_API_KEY: myapikey
            MCP_PROXY_URL: http://mcp-compose-http-proxy:9876
            OPENROUTER_GATEWAY_PORT: "8012"
            OPENROUTER_GATEWAY_SERVICE: mcp-compose-openrouter-gateway
            OPENROUTER_MODEL: google/gemma-3-27b-it
            TZ: America/New_York
        http_port: 8011
        protocol: http
        capabilities:
            - tools
        depends_on:
            - openrouter-gateway
        volumes:
            - /home/phil:/projects:rw
            - meal-log-data:/data
            - /tmp:/tmp:rw
        security:
            allow_host_mounts:
                - /home/phil
                - /tmp
                - /var
            allow_privileged_ops: true
            trusted_image: true
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:tools
            allow_api_key: true
        user: root
        security_opt:
            - no-new-privileges:true
        deploy:
            resources:
                limits:
                    cpus: "1.0"
                    memory: 512m
                    pids: 100
    memory:
        command: ./matey-memory
        args:
            - --host
            - 0.0.0.0
            - --port
            - "3001"
        build:
            context: github.com/phildougherty/m8e-memory.git
            dockerfile: Dockerfile
        env:
            DATABASE_URL: postgresql://postgres:password@matey-postgres-memory:5432/memory_graph?sslmode=disable
            NODE_ENV: production
        http_port: 3001
        protocol: http
        capabilities:
            - tools
            - resources
        depends_on:
            - postgres-memory
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:tools
            allow_api_key: true
        user: root
        security_opt:
            - no-new-privileges:true
    openrouter-gateway:
        command: /app/mcp-openrouter-gateway
        args:
            - --transport
            - http
            - --host
            - 0.0.0.0
            - --port
            - "8012"
        build:
            context: ./custom_mcp/openrouter-gateway
            dockerfile: Dockerfile
        env:
            HTTP_PORT: "8012"
            OPENROUTER_API_KEY: ""
            TZ: America/New_York
        http_port: 8012
        protocol: http
        capabilities:
            - tools
        security:
            trusted_image: true
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:tools
            allow_api_key: true
        user: 1000:1000
        cap_add:
            - CHOWN
            - DAC_OVERRIDE
            - SETGID
            - SETUID
        cap_drop:
            - ALL
        security_opt:
            - no-new-privileges:true
            - apparmor:unconfined
        deploy:
            resources:
                limits:
                    cpus: "1.0"
                    memory: 512m
                    pids: 100
    playwright:
        command: node
        args:
            - server.js
        build:
            context: ./custom_mcp/playwright
            dockerfile: Dockerfile
        env:
            HTTP_PORT: "8008"
            TZ: America/New_York
        http_port: 8008
        protocol: http
        capabilities:
            - tools
        volumes:
            - /home/phil:/projects:rw
        security:
            allow_host_mounts:
                - /home/phil
            trusted_image: true
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:tools
            allow_api_key: true
        user: 1000:1000
        tmpfs:
            - /tmp
            - /dev/shm
        cap_add:
            - SYS_ADMIN
        cap_drop:
            - ALL
        security_opt:
            - no-new-privileges:true
            - seccomp:unconfined
        deploy:
            resources:
                limits:
                    cpus: "4.0"
                    memory: 4g
                    pids: 500
    postgres-mcp:
        command: postgres-mcp
        args:
            - --access-mode=unrestricted
            - --transport=sse
            - --sse-host=0.0.0.0
            - --sse-port=8013
        image: crystaldba/postgres-mcp
        env:
            DATABASE_URI: postgresql://postgres:@memory-postgres:5432/memory_graph
            TZ: America/New_York
        http_port: 8013
        protocol: sse
        capabilities:
            - tools
        depends_on:
            - postgres-memory
        security:
            trusted_image: true
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:*
            allow_api_key: true
        sse_path: /sse
        user: 1000:1000
        cap_add:
            - CHOWN
            - DAC_OVERRIDE
            - SETGID
            - SETUID
        cap_drop:
            - ALL
        security_opt:
            - no-new-privileges:true
            - apparmor:unconfined
        deploy:
            resources:
                limits:
                    cpus: "1.0"
                    memory: 512m
                    pids: 100
    postgres-memory:
        image: postgres:15-alpine
        env:
            POSTGRES_DB: memory_graph
            POSTGRES_PASSWORD: password
            POSTGRES_USER: postgres
        volumes:
            - postgres-memory-data:/var/lib/postgresql/data
        networks:
            - mcp-net
        user: postgres
        security_opt:
            - no-new-privileges:true
        restart: unless-stopped
        healthcheck:
            test:
                - CMD-SHELL
                - pg_isready -U postgres
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s
    searxng:
        command: node
        args:
            - /app/server.js
        build:
            context: ./custom_mcp/searxng
            dockerfile: Dockerfile
        env:
            MAX_SEARCH_RESULTS: "5"
            MCP_SOCAT_INTERNAL_PORT: "8006"
            SEARXNG_URL: http://192.168.86.201:8484/search
        stdio_hoster_port: 8006
        capabilities:
            - tools
        security:
            trusted_image: true
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:tools
            allow_api_key: true
        user: 1000:1000
        cap_add:
            - CHOWN
            - DAC_OVERRIDE
            - SETGID
            - SETUID
        cap_drop:
            - ALL
        security_opt:
            - no-new-privileges:true
            - apparmor:unconfined
        deploy:
            resources:
                limits:
                    cpus: "1.0"
                    memory: 512m
                    pids: 100
    sequential-thinking:
        command: npx
        args:
            - -y
            - '@modelcontextprotocol/server-sequential-thinking'
        build:
            context: ./docker_utils/socat_stdio_hoster
            dockerfile: Dockerfile.base_socat_hoster
            args:
                BASE_IMAGE: node:22-slim
        env:
            MCP_SOCAT_INTERNAL_PORT: "12347"
        stdio_hoster_port: 12347
        capabilities:
            - tools
        security:
            trusted_image: true
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:tools
            allow_api_key: true
        user: 1000:1000
        cap_add:
            - CHOWN
            - DAC_OVERRIDE
            - SETGID
            - SETUID
        cap_drop:
            - ALL
        security_opt:
            - no-new-privileges:true
            - apparmor:unconfined
        deploy:
            resources:
                limits:
                    cpus: "2.0"
                    memory: 1g
                    pids: 100
    task-scheduler:
        command: ./matey-task-scheduler
        args:
            - --host
            - 0.0.0.0
            - --port
            - "8018"
        build:
            context: github.com/phildougherty/m8e-task-scheduler.git
            dockerfile: Dockerfile
        env:
            DATABASE_PATH: /data/task-scheduler.db
            MCP_PROXY_API_KEY: myapikey
            MCP_PROXY_URL: http://192.168.86.201:9876
            NODE_ENV: production
            OLLAMA_MODEL: qwen3:14b
            OLLAMA_URL: 192.168.86.201:11434
            OPENROUTER_API_KEY: ""
            OPENROUTER_MODEL: google/gemini-2.5-flash-lite-preview-06-17
        http_port: 8080
        protocol: http
        capabilities:
            - tools
        volumes:
            - /home/phil:/workspace:rw
            - /tmp:/tmp:rw
        networks:
            - mcp-net
        authentication:
            enabled: true
            required_scope: mcp:tools
            allow_api_key: true
        user: root
        security_opt:
            - no-new-privileges:true
    timezone:
        command: python
        args:
            - server.py
        build:
            context: ./custom_mcp/timezone
            dockerfile: Dockerfile
        env:
            HTTP_PORT: "8010"
            TZ: America/New_York
        ports:
            - 8010:8010
        http_port: 8010
        protocol: http
        capabilities:
            - tools
        security:
            trusted_image: true
        networks:
            - mcp-net
        authentication:
            enabled: false
            optional_auth: true
        user: 1000:1000
        cap_add:
            - CHOWN
            - DAC_OVERRIDE
            - SETGID
            - SETUID
        cap_drop:
            - ALL
        security_opt:
            - no-new-privileges:true
            - apparmor:unconfined
        deploy:
            resources:
                limits:
                    cpus: "1.0"
                    memory: 256m
                    pids: 100
dashboard:
    enabled: true
    port: 3111
    host: 0.0.0.0
    proxy_url: http://mcp-compose-http-proxy:9876
    postgres_url: postgresql://postgres:@mcp-compose-postgres-memory:5432/mcp_dashboard?sslmode=disable
    theme: dark
    log_streaming: true
    config_editor: true
    metrics: true
    security:
        enabled: true
        oauth_config: true
        client_management: true
        user_management: true
        audit_logs: true
    admin_login:
        enabled: true
        session_timeout: 24h
networks:
    mcp-net:
        driver: bridge
volumes:
    gdrive-credentials:
        driver: local
    hn-radio-episodes:
        driver: local
    mcp-cron-data:
        driver: local
    meal-log-data:
        driver: local
    postgres-memory-data:
        driver: local
task_scheduler:
    enabled: true
    port: 8018
    host: 0.0.0.0
    database_path: /data/task-scheduler.db
    log_level: debug
    openrouter_api_key: ""
    openrouter_model: google/gemini-2.5-flash-lite-preview-06-17
    ollama_url: 192.168.86.201:11434
    ollama_model: qwen3:14b
    mcp_proxy_url: http://192.168.86.201:9876
    mcp_proxy_api_key: myapikey
    openwebui_enabled: false
    workspace: /home/phil
    cpus: "2.0"
    memory: 1g
    volumes:
        - /home/phil:/workspace:rw
        - /tmp:/tmp:rw
    env: {}
memory:
    enabled: true
    port: 3001
    host: 0.0.0.0
    database_url: postgresql://postgres:password@matey-postgres-memory:5432/memory_graph?sslmode=disable
    postgres_enabled: true
    postgres_port: 5432
    postgres_db: memory_graph
    postgres_user: postgres
    postgres_password: password
    cpus: "1.0"
    memory: 1g
    postgres_cpus: "2.0"
    postgres_memory: 2g
    volumes:
        - postgres-memory-data:/var/lib/postgresql/data
    authentication:
        enabled: true
        required_scope: mcp:tools
        allow_api_key: true
ai:
    default_provider: ollama
    fallback_providers:
        - claude
        - openai
    providers:
        openai:
            api_key: "${OPENAI_API_KEY}"
            default_model: "gpt-4"
            max_tokens: 4096
            temperature: 0.7
            timeout: "30s"
        claude:
            api_key: "${ANTHROPIC_API_KEY}"
            default_model: "claude-3.5-sonnet-20241022"
            max_tokens: 8192
            temperature: 0.7
            timeout: "30s"
        ollama:
            endpoint: "http://192.168.86.201:11434"
            default_model: "qwen3:14b"
            max_tokens: 4096
            temperature: 0.7
            timeout: "60s"
        openrouter:
            api_key: "${OPENROUTER_API_KEY}"
            default_model: "anthropic/claude-3.5-sonnet"
            max_tokens: 4096
            temperature: 0.7
            timeout: "30s"
